{"version":3,"sources":["styles/Header.module.css","styles/VideoPlayer.module.css","styles/VideoThumb.module.css","api/youtube.js","components/Header.js","components/VideoPlayer.js","components/VideoThumb.js","App.js","index.js"],"names":["module","exports","youtube","axios","create","baseURL","params","key","process","maxResults","part","type","search","term","a","get","q","response","data","items","console","log","Header","props","useState","searchText","setSearchText","handleSubmit","Paper","className","styles","container","elevation","style","cursor","textAlign","onClick","Typography","variant","searchContainer","TextField","placeholder","value","onChange","e","target","handleChange","onKeyDown","handleEnter","IconButton","aria-label","searchIcon","VideoPlayer","open","setOpen","error","Snackbar","autoHideDuration","onClose","Alert","severity","video","videoId","id","snippet","channelTitle","description","publishedAt","title","url","allowFullScreen","frameBorder","height","src","width","detailsContainer","secondaryText","Date","toDateString","VideoThumb","channelName","playSelectedVideo","play","alt","time","uploadTime","getTime","duration","Math","floor","calculateUploadTime","App","videos","setVideos","selectedVideo","setSelectedVideo","setError","useEffect","searchQuery","searchTerm","videoResponse","length","vid","filter","Grid","justify","item","xs","map","index","Fragment","thumbnails","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11657ee4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1CTvm\",\"searchContainer\":\"Header_searchContainer__Gu0Cw\",\"search\":\"Header_search__n-3vn\",\"searchIcon\":\"Header_searchIcon__vHamR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoPlayer_container__2KmNg\",\"detailsContainer\":\"VideoPlayer_detailsContainer__28xu8\",\"secondaryText\":\"VideoPlayer_secondaryText__X0RPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoThumb_container__2ZDXr\",\"detailsContainer\":\"VideoThumb_detailsContainer__mu9ca\",\"secondaryText\":\"VideoThumb_secondaryText__3Zyh_\"};","import axios from 'axios';\n\nlet youtube = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n  params: {\n    key: process.env.REACT_APP_YT,\n    maxResults: 7,\n    part: 'snippet',\n    type: 'video',\n  },\n});\n\nexport async function search(term) {\n  try {\n    let response = await youtube.get('search', {\n      params: {\n        q: term,\n      },\n    });\n\n    return response.data.items;\n  } catch (error) {\n    console.log('error: ', error);\n    return [];\n  }\n}\n","import {\n  IconButton,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\n\nimport styles from '../styles/Header.module.css';\n\nconst Header = props => {\n  const [searchText, setSearchText] = useState('');\n\n  let goToHome = () => {\n    props.search('YouTube');\n  };\n\n  let handleChange = e => {\n    setSearchText(e.target.value);\n  }\n\n  let handleEnter = e => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  }\n\n  let handleSubmit = () => {\n    props.search(searchText);\n  }\n\n  return (\n    <Paper\n      className={styles.container}\n      elevation={2}\n    >\n      <div\n        style={{ cursor: 'pointer', textAlign: 'center' }}\n        onClick={goToHome}\n      >\n        <Typography\n          variant='h5'\n        >\n          YouTube\n        </Typography>\n        <Typography\n          variant='caption'\n        >\n          Clone\n        </Typography>\n      </div>\n      <div\n        className={styles.searchContainer}\n      >\n        <TextField\n          className={styles.search}\n          placeholder='Search'\n          value={searchText}\n          variant='outlined'\n          onChange={e => handleChange(e)}\n          onKeyDown={e => handleEnter(e)}\n        />\n        <IconButton\n          aria-label='search'\n          className={styles.searchIcon}\n          onClick={handleSubmit}\n        >\n          <SearchIcon />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n};\n\nexport default Header;\n","import {\n  Paper,\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\n\nimport styles from '../styles/VideoPlayer.module.css';\n\nconst VideoPlayer = props => {\n  const [open, setOpen] = useState(true);\n\n  if (props.error) {\n    return (\n      <Snackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Alert\n          elevation={6}\n          severity='error'\n          variant='filled'\n        >\n          Some error occured. Try reloading the page.\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  if (!props.video) {\n    return <div></div>;\n  }\n\n  let { videoId } = props.video.id;\n  let {\n    channelTitle,\n    description,\n    publishedAt,\n    title,\n  } = props.video.snippet;\n\n  let url = `https://www.youtube.com/embed/${videoId}?autoplay=1&controls=1`;\n\n  return (\n    <>\n      <Paper\n        className={styles.container}\n        elevation={6}\n      >\n        <iframe\n          allowFullScreen\n          frameBorder='0'\n          height='100%'\n          src={url}\n          title='Video Player'\n          width='100%'\n        >\n        </iframe>\n      </Paper>\n      <div\n        className={styles.detailsContainer}\n      >\n        <Typography\n          variant='h6'\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={styles.secondaryText}\n          variant='subtitle2'\n        >\n          {new Date(publishedAt).toDateString()}\n        </Typography>\n        <hr />\n        <Typography\n          variant='h6'\n        >\n          {channelTitle}\n        </Typography>\n        <Typography\n          className={styles.secondaryText}\n          variant='subtitle2'\n        >\n          {description}\n        </Typography>\n      </div>\n    </>\n  );\n};\n\nexport default VideoPlayer;\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport styles from '../styles/VideoThumb.module.css';\n\nconst VideoThumb = props => {\n  let {\n    channelName,\n    id,\n    publishedAt,\n    title,\n    url,\n  } = props;\n\n  const calculateUploadTime = time => {\n    let uploadTime = new Date(time).getTime();\n    let currentTime = new Date().getTime();\n\n    let duration = currentTime - uploadTime;\n\n    // check if difference is in secs\n    duration = Math.floor(duration / 1000);\n    if (duration < 60) {\n      return `${Math.floor(duration / 1000)} secs ago`;\n    }\n\n    // check if difference is in mins\n    duration = Math.floor(duration / 60);\n    if (duration < 60) {\n      return `${duration} ${duration === 1 ? 'min' : 'mins'} ago`;\n    }\n\n    // check if difference is in hours\n    duration = Math.floor(duration / 60);\n    if (duration < 24) {\n      return `${duration} ${duration === 1 ? 'hour' : 'hours'} ago`;\n    }\n\n    // check if difference is in days\n    duration = Math.floor(duration / 24);\n    if (duration < 30) {\n      return `${duration} ${duration === 1 ? 'day' : 'days'} ago`;\n    }\n\n    // check if difference is in months\n    if (duration < 365) {\n      let time = Math.floor(duration / 30);\n\n      return `${time} ${time === 1 ? 'month' : 'months'} ago`;\n    }\n\n    duration = Math.floor(duration / 365);\n\n    return `${duration} ${duration === 1 ? 'year' : 'years'} ago`;\n  };\n\n  const play = id => {\n    props.playSelectedVideo(id);\n  }\n\n  return (\n    <div\n      className={styles.container}\n      onClick={() => play(id)}\n    >\n      <img\n        alt={title}\n        src={url}\n      />\n      <div\n        className={styles.detailsContainer}\n      >\n        <Typography\n          variant='subtitle2'\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={styles.secondaryText}\n          variant='caption'\n        >\n          {channelName}\n        </Typography>\n        <Typography\n          className={styles.secondaryText}\n          variant='body2'\n        >\n          {calculateUploadTime(publishedAt)}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoThumb;\n","import {\n  Grid,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { search } from './api/youtube';\nimport Header from './components/Header';\nimport VideoPlayer from './components/VideoPlayer';\nimport VideoThumb from './components/VideoThumb';\n\nimport './App.module.css';\n\nimport 'fontsource-roboto';\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState();\n\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    searchQuery('YouTube');\n  }, []);\n\n  const searchQuery = async searchTerm => {\n    let videoResponse = (await search(searchTerm));\n\n    if (videoResponse.length === 0) {\n      setError(true);\n      return;\n    }\n\n    setVideos(videoResponse);\n    setSelectedVideo(videoResponse[0]);\n  };\n\n  const playSelectedVideo = id => {\n    let vid = videos.filter(video => video.id.videoId === id);\n\n    setSelectedVideo(vid[0]);\n  };\n\n  return (\n    <Grid\n      container\n      justify='center'\n    >\n      <Grid\n        item\n        xs={12}\n      >\n        <Header\n          search={searchQuery}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={8}\n        style={{ height: '80vh' }}\n      >\n        <VideoPlayer\n          error={error}\n          video={selectedVideo}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={4}\n      >\n        {\n          videos.map((video, index) => {\n            if (video === selectedVideo) {\n              return (\n                <React.Fragment key='FRAGMENT'>\n                </React.Fragment>\n              );\n            }\n            return (\n              <VideoThumb\n                channelName={video.snippet.channelTitle}\n                id={video.id.videoId}\n                key={index}\n                playSelectedVideo={playSelectedVideo}\n                publishedAt={video.snippet.publishedAt}\n                title={video.snippet.title}\n                url={video.snippet.thumbnails.default.url}\n              />\n            );\n          })\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}